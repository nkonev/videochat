version: '3.7'

services:
  traefik:
    image: traefik:v2.11.2
    hostname: traefik
    # The Static Configuration
    command: --configFile=/traefik_conf/traefik.yml
    ports:
    - target: 80
      published: 80
      protocol: tcp
      mode: host
    - target: 443
      published: 443
      protocol: tcp
      mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik_conf:/traefik_conf
    networks:
      - backend
    logging:
      driver: "journald"
      options:
        tag: chat-traefik

  postgresql:
    image: postgres:15.1-alpine3.17
    volumes:
      - ./postgresql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgresqlPassword
    networks:
      backend:
    logging:
      driver: "journald"
      options:
        tag: chat-postgresql

  redis:
    image: redis:7.0.8-alpine3.17
    hostname: redis
    volumes:
      - redis_data_dir:/data
    networks:
      backend:
    logging:
      driver: "journald"
      options:
        tag: chat-redis

  minio:
    image: bitnami/minio:2024.1.29-debian-11-r0
    hostname: minio
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.minio-service.loadbalancer.server.port=9000"
        - "traefik.http.routers.minio-router.rule=PathPrefix(`/api/s3`)"
        - "traefik.http.routers.minio-router.entrypoints=http"
        - "traefik.http.routers.minio-router.middlewares=minio-strip-prefix-middleware,retry-middleware@file,minio-fix-host-middleware"
        - "traefik.http.middlewares.minio-strip-prefix-middleware.stripprefix.prefixes=/api/s3"
        - "traefik.http.middlewares.minio-fix-host-middleware.headers.customrequestheaders.Host=minio:9000"

    environment:
      - MINIO_ROOT_USER=AKIAIOSFODNN7EXAMPLE
      - MINIO_ROOT_PASSWORD=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - MINIO_NOTIFY_AMQP_ENABLE_primary=on
      - MINIO_NOTIFY_AMQP_URL_primary=amqp://videoChat:videoChatPazZw0rd@rabbitmq:5672
      - MINIO_NOTIFY_AMQP_EXCHANGE_primary=minio-events
      - MINIO_NOTIFY_AMQP_EXCHANGE_TYPE_primary=direct
      - MINIO_NOTIFY_AMQP_MANDATORY_primary=off
      - MINIO_NOTIFY_AMQP_DURABLE_primary=on
      - MINIO_NOTIFY_AMQP_NO_WAIT_primary=off
      - MINIO_NOTIFY_AMQP_AUTO_DELETED_primary=off
      - MINIO_NOTIFY_AMQP_DELIVERY_MODE_primary=2
      - BITNAMI_DEBUG=true

    volumes:
      - /mnt/chat-minio/data:/bitnami/minio/data
    networks:
      backend:
    logging:
      driver: "journald"
      options:
        tag: chat-minio

  rabbitmq:
    image: rabbitmq:3.11.7-management-alpine
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=videoChat
      - RABBITMQ_DEFAULT_PASS=videoChatPazZw0rd
    volumes:
      - rabbitmq_data_dir:/var/lib/rabbitmq/mnesia
    networks:
      backend:
    logging:
      driver: "journald"
      options:
        tag: chat-rabbitmq

  livekit:
    image: livekit/livekit-server:v1.6.1
    command: --config /etc/livekit.yaml
    volumes:
      - ./livekit/livekit.yaml:/etc/livekit.yaml
    networks:
      backend:
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.livekit-service.loadbalancer.server.port=7880"
        - "traefik.http.routers.livekit-router.rule=PathPrefix(`/api/livekit`)"
        - "traefik.http.routers.livekit-router.entrypoints=http"
        - "traefik.http.middlewares.livekit-stripprefix-middleware.stripprefix.prefixes=/api/livekit"
        - "traefik.http.routers.livekit-router.middlewares=auth-middleware@file,livekit-stripprefix-middleware,retry-middleware@file"
    ports:
      # turn udp port
      - target: 3478
        published: 3478
        protocol: udp
        mode: host

      # turn tls port
#      - target: 5349
#        published: 5349
#        protocol: tcp
#        mode: host

      # webrtc udp port
      - target: 7882
        published: 7882
        protocol: udp
        mode: host

      # webrtc tcp port
#      - target: 7881
#        published: 7881
#        protocol: tcp
#        mode: host

    logging:
      driver: "journald"
      options:
        tag: chat-livekit

  egress:
    image: livekit/egress:v1.8.2
    networks:
      backend:
    environment:
      - EGRESS_CONFIG_FILE=/etc/egress/config.yaml
    volumes:
      - ./egress/config.yaml:/etc/egress/config.yaml
      - egress_tmp:/home/egress/tmp:z
    cap_add:
      - SYS_ADMIN
    logging:
      driver: "journald"
      options:
        tag: chat-egress

  jaeger:
    image: jaegertracing/all-in-one:1.54.0
    hostname: jaeger
    networks:
      backend:
#    deploy:
#      resources:
#        limits:
#          cpus: '0.40'
#          memory: '450M'
    logging:
      driver: "journald"
      options:
        tag: chat-jaeger
    command:
      - --memory.max-traces=100000

volumes:
  postgres_data:
  redis_data_dir:
  rabbitmq_data_dir:
  egress_tmp:

networks:
  backend:
    driver: overlay
