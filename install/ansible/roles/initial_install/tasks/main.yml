- name: Secure sshd
  ansible.builtin.copy:
    src: files/ssh-secure.conf
    dest: /etc/ssh/sshd_config.d/00-secure.conf
    owner: root
    group: root
    mode: 0600
  notify: Reload SSH

# https://www.digitalocean.com/community/tutorial-series/how-to-write-ansible-playbooks
- name: Docker repo
  get_url:
    url: "{{ docker_repo }}"
    dest: /etc/yum.repos.d/docker-ce.repo

# https://docs.rockylinux.org/gemstones/containers/docker/
- name: Install Docker
  package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: latest

- name: Remove empty dirs
  ansible.builtin.file:
    path: /opt/containerd
    state: absent

- name: Install docker proxy
  ansible.builtin.copy:
    src: files/daemon.json
    dest: /etc/docker/daemon.json
  notify: Reload docker

- name: Start Docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: Create root config directory if it does not exist
  ansible.builtin.file:
    path: "{{ dir_prefix }}"
    state: directory

- name: Create Livekit config directory if it does not exist
  ansible.builtin.file:
    path: "{{ dir_prefix }}/livekit"
    state: directory

# https://www.digitalocean.com/community/tutorials/how-to-create-and-use-templates-in-ansible-playbooks
- name: Create Livekit config
  template:
    src: templates/livekit.yaml.tpl
    dest: "{{ dir_prefix }}/livekit/livekit.yaml"

- name: Create Traefik config directory if it does not exist
  ansible.builtin.file:
    path: "{{ dir_prefix }}/traefik/dynamic"
    state: directory

- name: Create Traefik static config
  template:
    src: templates/traefik.yml.tpl
    dest: "{{ dir_prefix }}/traefik/traefik.yml"

- name: Create Traefik dynamic config
  template:
    src: templates/common_middlewares.yml.tpl
    dest: "{{ dir_prefix }}/traefik/dynamic/common_middlewares.yml"

- name: Create PostgreSQL config directory if it does not exist
  ansible.builtin.file:
    path: "{{ dir_prefix }}/postgresql/docker-entrypoint-initdb.d"
    state: directory

- name: Create PostgreSQL init.sql
  ansible.builtin.copy:
    src: files/init.sql
    dest: "{{ dir_prefix }}/postgresql/docker-entrypoint-initdb.d/init.sql"

- name: Create Egress config directory if it does not exist
  ansible.builtin.file:
    path: "{{ dir_prefix }}/egress"
    state: directory

- name: Create Egress config
  ansible.builtin.copy:
    src: files/egress.yaml
    dest: "{{ dir_prefix }}/egress/config.yaml"

- name: Create Minio data directory and set owner and access on Minio data directory non recursively
  ansible.builtin.file:
    path: /mnt/chat-minio/data
    state: directory
    mode: u=rwx,g-rwx,o-rwx
    # https://docs.bitnami.com/kubernetes/faq/configuration/use-non-root/
    # https://github.com/bitnami/containers/blob/main/bitnami/minio/2024/debian-12/Dockerfile#L61C6-L61C10
    owner: 1001
    group: 1001

- name: Create Storage tmp directory if it does not exist
  ansible.builtin.file:
    path: /mnt/chat-storage-tmp
    state: directory
    mode: a=rw

- name: Create PostgreSQL data directory if it does not exist
  ansible.builtin.file:
    path: /mnt/chat-postgresql
    state: directory
    mode: u=rwx,g-rwx,o-rwx
    owner: 70
    group: 70

- name: Create Docker Compose Infra
  template:
    src: templates/docker-compose-infra.yml.tpl
    dest: "{{ dir_prefix }}/docker-compose-infra.yml"

- name: Create Docker prune cron
  ansible.builtin.copy:
    src: files/docker-prune.sh
    dest: "/etc/cron.daily/docker-prune.sh"
    mode: a+x

- name: Install python package
  package:
    name:
      - python
      - pip
    state: latest

- name: Install python packages to manipulate with docker swarm
  ansible.builtin.pip:
    name:
      - docker
      - jsondiff

# https://docs.ansible.com/ansible/latest/collections/community/docker/docker_swarm_module.html#ansible-collections-community-docker-docker-swarm-module
- name: Init a new swarm with default parameters
  community.docker.docker_swarm:
    state: present
  register: swarm_facts

- debug:
    msg: "Swarm tokens are {{ swarm_facts.swarm_facts.JoinTokens }}"

- name: Deploy stack for Infra
  community.docker.docker_stack:
    state: present
    name: "{{ swarm_stack_name }}"
    compose:
      - "{{ dir_prefix }}/docker-compose-infra.yml"

- name: Create Docker Compose AAA
  template:
    src: templates/docker-compose-aaa.yml.tpl
    dest: "{{ dir_prefix }}/docker-compose-aaa.yml"

- name: Deploy stack for AAA
  community.docker.docker_stack:
    state: present
    name: "{{ swarm_stack_name }}"
    compose:
      - "{{ dir_prefix }}/docker-compose-aaa.yml"
