# https://www.digitalocean.com/community/tutorial-series/how-to-write-ansible-playbooks
- name: Docker repo
  get_url:
    url: "{{ docker_repo }}"
    dest: /etc/yum.repos.d/docker-ce.repo

# https://docs.rockylinux.org/gemstones/containers/docker/
- name: Install Docker
  package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: latest

- name: Remove empty dirs
  ansible.builtin.file:
    path: /opt/containerd
    state: absent

- name: Install docker proxy
  ansible.builtin.copy:
    src: files/daemon.json
    dest: /etc/docker/daemon.json

- name: Start Docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: Create root config directory if it does not exist
  ansible.builtin.file:
    path: "{{ dir_prefix }}"
    state: directory

- name: Create Livekit directory if it does not exist
  ansible.builtin.file:
    path: "{{ dir_prefix }}/livekit"
    state: directory

# https://www.digitalocean.com/community/tutorials/how-to-create-and-use-templates-in-ansible-playbooks
- name: Create Livekit config
  template:
    src: templates/livekit.yaml.tpl
    dest: "{{ dir_prefix }}/livekit/livekit.yaml"

- name: Create Traefik directory if it does not exist
  ansible.builtin.file:
    path: "{{ dir_prefix }}/traefik/dynamic"
    state: directory

- name: Create Traefik static config
  template:
    src: templates/traefik.yml.tpl
    dest: "{{ dir_prefix }}/traefik/traefik.yml"

- name: Create Traefik dynamic config
  template:
    src: templates/common_middlewares.yml.tpl
    dest: "{{ dir_prefix }}/traefik/dynamic/common_middlewares.yml"

- name: Create PostgreSQL directory if it does not exist
  ansible.builtin.file:
    path: "{{ dir_prefix }}/postgresql/docker-entrypoint-initdb.d"
    state: directory

- name: Create PostgreSQL init.sql
  ansible.builtin.copy:
    src: files/init.sql
    dest: "{{ dir_prefix }}/postgresql/docker-entrypoint-initdb.d/init.sql"

- name: Create Egress directory if it does not exist
  ansible.builtin.file:
    path: "{{ dir_prefix }}/egress"
    state: directory

- name: Create Egress config
  ansible.builtin.copy:
    src: files/egress.yaml
    dest: "{{ dir_prefix }}/egress/config.yaml"

- name: Create Minio data directory if it does not exist
  ansible.builtin.file:
    path: /mnt/chat-minio/data
    state: directory

- name: Set RW access on Minio data directory
  ansible.builtin.file:
    path: /mnt/chat-minio
    state: directory
    recurse: true
    mode: a=rw

- name: Create Storage tmp directory if it does not exist
  ansible.builtin.file:
    path: /mnt/chat-storage-tmp
    state: directory

- name: Set RW access on Storage tmp directory
  ansible.builtin.file:
    path: /mnt/chat-storage-tmp
    state: directory
    recurse: true
    mode: a=rw

- name: Create PostgreSQL data directory if it does not exist
  ansible.builtin.file:
    path: /mnt/chat-postgresql
    state: directory
    recurse: true
    mode: a=rw
