# This file used for both developer and demo purposes.
# It contains environment
version: '3.7'

services:
  traefik:
    image: traefik:v2.11.2
    hostname: traefik
    restart: unless-stopped
    # The Static Configuration
    command: --configFile=/traefik_conf/traefik.yml
    ports:
      - 0.0.0.0:8081:8081
    extra_hosts:
      # https://github.com/moby/moby/pull/40007
      # works on Docker for Mac 3.4.0 or Linux Docker 20.10.4
      - "host.docker.internal:host-gateway"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:z
      - ./docker/traefik_conf:/traefik_conf:z
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"
    networks:
      backend:


  postgresql:
    image: postgres:15.1-alpine3.17
    restart: unless-stopped
    ports:
      - 35432:5432
    volumes:
      - ./docker/postgresql_dev/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:z
      - postgres_data:/var/lib/postgresql/data:z
    environment:
      - POSTGRES_PASSWORD=postgresqlPassword
    networks:
      backend:
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"

  redis:
    image: valkey/valkey:7.2.5-bookworm
    hostname: redis
    restart: unless-stopped
    ports:
      - 36379:6379
    volumes:
      - redis_data_dir:/data:z
    networks:
      backend:
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"

  minio:
    image: bitnami/minio:2024.1.29-debian-11-r0
    hostname: minio
    restart: unless-stopped
    ports:
      - 39000:9000
      - 39001:9001
    networks:
      backend:
    environment:
      - MINIO_ROOT_USER=AKIAIOSFODNN7EXAMPLE
      - MINIO_ROOT_PASSWORD=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - MINIO_NOTIFY_AMQP_ENABLE_primary=on
      - MINIO_NOTIFY_AMQP_URL_primary=amqp://videoChat:videoChatPazZw0rd@rabbitmq:5672
      - MINIO_NOTIFY_AMQP_EXCHANGE_primary=minio-events
      - MINIO_NOTIFY_AMQP_EXCHANGE_TYPE_primary=direct
      - MINIO_NOTIFY_AMQP_MANDATORY_primary=off
      - MINIO_NOTIFY_AMQP_DURABLE_primary=on
      - MINIO_NOTIFY_AMQP_NO_WAIT_primary=off
      - MINIO_NOTIFY_AMQP_AUTO_DELETED_primary=off
      - MINIO_NOTIFY_AMQP_DELIVERY_MODE_primary=2
    volumes:
      - minio_data:/bitnami/minio/data:z
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"

  rabbitmq:
    image: rabbitmq:3.11.7-management-alpine
    hostname: rabbitmq
    restart: unless-stopped
    ports:
      - 35672:15672
      - 36672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=videoChat
      - RABBITMQ_DEFAULT_PASS=videoChatPazZw0rd
    volumes:
      - rabbitmq_data_dir:/var/lib/rabbitmq/mnesia:z
    networks:
      backend:
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  livekit:
    image: livekit/livekit-server:v1.7.0
    command: --config /etc/livekit.yaml
    restart: unless-stopped
    network_mode: "host"
    volumes:
      - ./docker/livekit/livekit.yaml:/etc/livekit.yaml

  egress:
    image: livekit/egress:v1.8.4
    restart: unless-stopped
    networks:
      backend:
    environment:
      - EGRESS_CONFIG_FILE=/etc/egress/config.yaml
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./docker/egress/config.yaml:/etc/egress/config.yaml
      - egress_tmp:/home/egress/tmp:z
    cap_add:
      - SYS_ADMIN

  jaeger:
    image: jaegertracing/all-in-one:1.54.0
    hostname: jaeger
    restart: unless-stopped
    ports:
      # https://www.jaegertracing.io/docs/1.54/deployment/
      - 4318:4318 # OTLP GRPC over HTTP (aaa)
      - 4317:4317 # OTLP GRPC (other microservices)
      - 16686:16686 # web ui
      - 6831:6831/udp # jaeger thrift (traefik)
    networks:
      backend:
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"
    command:
      - --memory.max-traces=100000

volumes:
  postgres_data:
  redis_data_dir:
  minio_data:
  rabbitmq_data_dir:
  egress_tmp:

networks:
  backend:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/24
